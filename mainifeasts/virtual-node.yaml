---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: virtual-kubelet
  namespace: kube-system
  labels:
    k8s-app: virtual-kubelet
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: virtual-kubelet
  namespace: kube-system
subjects:
  - kind: ServiceAccount
    name: virtual-kubelet
    namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
---
apiVersion: v1
kind: Secret
metadata:
  name: virtual-kubelet
  namespace: kube-system
type: Opaque
data:
  cert.pem: ${cert.pem}
  key.pem: ${key.pem}
  ca.pem: ${ca.pem}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: virtual-kubelet
  namespace: kube-system
  labels:
    k8s-app: kubelet
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: virtual-kubelet
  template:
    metadata:
      labels:
        pod-type: virtual-kubelet
        k8s-app: virtual-kubelet
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: type
                    operator: NotIn
                    values:
                      - virtual-kubelet
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: pod-type
                    operator: In
                    values:
                      - virtual-kubelet
              topologyKey: kubernetes.io/hostname
      tolerations:
        - effect: NoSchedule
          key: role
          value: not-vk
          operator: Equal
      hostNetwork: true
      containers:
        - name: virtual-kubelet
          image: virtual-node:v1.0.1
          imagePullPolicy: IfNotPresent
          env:
            - name: KUBELET_PORT
              value: "10450"
            - name: APISERVER_CERT_LOCATION
              value: /etc/virtual-kubelet/cert/cert.pem
            - name: APISERVER_KEY_LOCATION
              value: /etc/virtual-kubelet/cert/key.pem
            - name: APISERVER_CA_CERT_LOCATION
              value: /etc/virtual-kubelet/cert/ca.pem
            - name: DEFAULT_NODE_NAME
              value: virtual-kubelet
            - name: VKUBELET_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          volumeMounts:
            - name: credentials
              mountPath: "/etc/virtual-kubelet/cert"
              readOnly: true
            - name: kube
              mountPath: "/root"
              readOnly: true
          args:
            - --provider=k8s
            - --nodename=$(DEFAULT_NODE_NAME)
            - --disable-taint=true
            - --kube-api-qps=500
            - --kube-api-burst=1000
            - --client-qps=500
            - --client-burst=1000
            - --client-kubeconfig=/root/kube.config
            - --klog.v=5
            - --log-level=debug
            - --metrics-addr=:10455
          livenessProbe:
            tcpSocket:
              port: 10455
            initialDelaySeconds: 20
            periodSeconds: 20
      volumes:
        - name: credentials
          secret:
            secretName: virtual-kubelet
        - name: kube
          configMap:
            name: vk
            items:
              - key: kube.config
                path: kube.config
            defaultMode: 420
      serviceAccountName: virtual-kubelet
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vk
  namespace: kube-system
data:
  kube.config: ${kube.config}